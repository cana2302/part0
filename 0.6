sequenceDiagram

    participant user
    participant browser
    participant server

    browser->>server: GET https://studies.cs.helsinki.fi/exampleapp/spa
    activate server
    server-->>browser: HTML document
    deactivate server

    browser->>server: GET https://studies.cs.helsinki.fi/exampleapp/main.css
    activate server
    server-->>browser: the css file
    deactivate server

    browser->>server: GET https://studies.cs.helsinki.fi/exampleapp/spa.js
    activate server
    server-->>browser: the JavaScript file
    deactivate server

    Note right of browser: The browser starts executing the JavaScript code that fetches the JSON from the server

    browser->>server: GET https://studies.cs.helsinki.fi/exampleapp/data.json
    activate server
    server-->>browser: [{ "content": "HTML is easy", "date": "2023-11-25" }, ... ]
    deactivate server

    Note right of browser: The browser executes the callback function that renders the notes

    user-->>browser: writing something into the text field
    user->>browser: clicking the Save button
    Note right of user: The app does not traditionally send the form data
    Note right of user: The browser uses the JavaScript code it fetched from the server.

    browser->>server: POST https://studies.cs.helsinki.fi/exampleapp/new_note_spa
    activate server
    Note right of browser: The form submit event defined at spa.js
    server-->>browser: HTTP status code 201 created.
    deactivate server
    Note left of server: The browser stays on the same page
    activate browser
    Note left of browser: The event handler creates a new note, adds it to the notes list with the command notes.push(note)
    browser->>server: Rerenders the note list on the page and sends the new note to the server.
    deactivate browser
